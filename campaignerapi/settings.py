"""
Django settings for campaignerapi project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from celery.schedules import crontab
from pathlib import Path
from decouple import (
    AutoConfig,
    Config,
    RepositoryEnv,
)
from campaignerapi.config.fallbacks import SettingsFallbacks

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

settings_location = os.getenv("SETTINGS_LOCATION")
if settings_location is not None:
    config = Config(RepositoryEnv(settings_location))
else:
    config = AutoConfig()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = "test"
SECRET_KEY = config("SECRET_KEY", default=SettingsFallbacks.SECRET_KEY.value)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "campaignerapi.apps.WebservicesConfig",
    "corsheaders",
    "django_extensions",
    "django_filters",
    "rest_framework",
    "django_celery_results",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "campaignerapi.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "campaignerapi.wsgi.application"

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_TIMEOUT = 100
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")

DATABASE_ENGINE = config(
    "DATABASE_ENGINE", default="django.db.backends.postgresql"
)
DATABASE_HOST = config("DATABASE_HOST", default="localhost")
DATABASE_NAME = config("DATABASE_NAME", default=SettingsFallbacks.DATABASE_NAME.value)
DATABASE_PASSWORD = config(
    "DATABASE_PASSWORD", default=SettingsFallbacks.DATABASE_PASSWORD.value
)
DATABASE_USER = config("DATABASE_USER", default=SettingsFallbacks.DATABASE_USER.value)
DATABASE_PORT = config("DATABASE_PORT", default=5432)
DATABASE_SSL = config("DATABASE_SSL", default=False, cast=bool)

DATABASE_OPTIONS = {}
if DATABASE_SSL:
    DATABASE_OPTIONS["sslmode"] = "require"


DATABASES = {
    "default": {
        "ENGINE": DATABASE_ENGINE,
        "HOST": DATABASE_HOST,
        "NAME": DATABASE_NAME,
        "PASSWORD": DATABASE_PASSWORD,
        "USER": DATABASE_USER,
        "PORT": DATABASE_PORT,
        "OPTIONS": DATABASE_OPTIONS,
    },
}

POSTGRES_HOST_AUTH_METHOD = "trust"

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

CELERY_BEAT_SCHEDULE = {
    "send-email-every-30-seconds": {
        "task": "campaignerapi.tasks.task_email.send_email_task",
        "schedule": 30.0,
        "options": {
            "expires": 15.0,
        },
    },
}


CELERY_BROKER_URL = "amqp://localhost"

CORS_ALLOW_HEADERS = (
    "x-requested-with",
    "content-type",
    "accept",
    "origin",
    "authorization",
    "X-Prototype-Version",
    "x-csrftoken",
)

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = ("GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS")
